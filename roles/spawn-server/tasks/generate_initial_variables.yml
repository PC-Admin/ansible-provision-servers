
# Append to server_vars.yml variable file (updatable)

- name: Add server_ipv4_final line to inventory file
  delegate_to: localhost
  lineinfile:
    path: './inventory/host_vars/{{ server_url }}/vars.yml'
    regexp: "^#? *{{ item.key | regex_escape() }}:"
    line: "{{ item.key }}: {{ item.value }}"
    mode: '0600'
    state: present
  with_dict:
    'server_ipv4_final': '"{{ server_ipv4_final }}"'
  when: server_ipv4_final|length > 0

- name: Add server_ipv4 line to inventory file
  delegate_to: 127.0.0.1
  lineinfile:
    path: './inventory/host_vars/{{ server_url }}/vars.yml'
    regexp: "^#? *{{ item.key | regex_escape() }}:"
    line: "{{ item.key }}: {{ item.value }}"
    mode: '0600'
    state: present
  with_dict:
    'server_ipv4': '"{{ server_ipv4 }}"'
  when: server_ipv4|length > 0

- name: Add server_ipv6 line to inventory file
  delegate_to: 127.0.0.1
  lineinfile:
    path: './inventory/host_vars/{{ server_url }}/vars.yml'
    regexp: "^#? *{{ item.key | regex_escape() }}:"
    line: "{{ item.key }}: {{ item.value }}"
    mode: '0600'
    state: present
  with_dict:
    'server_ipv6': '"{{ server_ipv6 }}"'
  when: server_ipv6 is not none and server_ipv6|length > 0
  ignore_errors: true

- name: Add do_droplet_id line to inventory file
  delegate_to: 127.0.0.1
  lineinfile:
    path: './inventory/host_vars/{{ server_url }}/vars.yml'
    regexp: "^{{ item.key }}:.*$"
    line: "{{ item.key }}: {{ item.value }}"
    mode: '0600'
    state: present
  with_dict:
    'do_droplet_id': '{{ new_server_info.data.droplet.id }}'
  when: do_droplet_id is defined

- name: Force SSH connection to skip initial host key check
  delegate_to: localhost
  shell: "ssh {{ server_ipv4 }} -o StrictHostKeyChecking=no -t 'exit'"
  register: wait_for_connection
  until: wait_for_connection.rc == 0
