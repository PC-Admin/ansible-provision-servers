---

- name: Wait for 10 seconds so host can come up
  pause:
    seconds: 10

- name: Remove host entry from known_hosts file (1/3)
  delegate_to: localhost
  known_hosts:
    name: "{{ hostvars[item].server_url }}"
    state: absent
  loop: "{{ ansible_play_hosts }}"
  run_once: true

- name: Remove host entry from known_hosts file (2/3)
  delegate_to: localhost
  known_hosts:
    name: '{{ server_ipv4 }}'
    state: absent

- name: Remove host entry from known_hosts file if static IP is being used (3/3)
  delegate_to: localhost
  known_hosts:
    name: '{{ server_ipv4_final }}'
    state: absent
  when: set_static_ip | bool

- name: Add the server URL to known hosts (Proxmox hosts)
  delegate_to: localhost
  known_hosts:
    name: '{{ server_url }}'
    key: "{{ server_url }} {{ proxmox_template_host_key }}"
    state: present
  when: spawn_on_proxmox | bool

- name: Add the initial server IPv4 to known hosts (Proxmox hosts)
  delegate_to: localhost
  known_hosts:
    name: '{{ server_ipv4 }}'
    key: "{{ server_ipv4 }} {{ proxmox_template_host_key }}"
    state: present
  when: spawn_on_proxmox | bool

- name: Add the "Final server IPv4" to known hosts if static IP is being used (Proxmox hosts)
  delegate_to: localhost
  known_hosts:
    name: '{{ server_ipv4_final }}'
    key: "{{ server_ipv4_final }} {{ proxmox_template_host_key }}"
    state: present
  when:
    - set_static_ip | bool
    - spawn_on_proxmox | bool

- name: Collect the ed25519 host key of any DigitalOcean droplets
  delegate_to: localhost
  command:
    ssh-keyscan -H {{ server_ipv4 }} 2>&1 | grep -v "^#" | awk '/ssh-ed25519/ {print $NF}'
  when: spawn_on_digitalocean | bool
  register: droplet_host_key

- name: Add the server URL to known hosts (DigitalOcean hosts)
  delegate_to: localhost
  known_hosts:
    name: '{{ server_url }}'
    key: "{{ server_url }} ssh-ed25519 {{ droplet_host_key.stdout }}"
    state: present
  when: spawn_on_digitalocean | bool

- name: Add the initial server IPv4 to known hosts (DigitalOcean hosts)
  delegate_to: localhost
  known_hosts:
    name: '{{ server_ipv4 }}'
    key: "{{ server_ipv4 }} ssh-ed25519 {{ droplet_host_key.stdout }}"
    state: present
  when: spawn_on_digitalocean | bool
